import clsx from "clsx";
import Head from "next/head";
import Cursor from "./Cursor";
import LayoutFooter from "./LayoutFooter";
import LayoutHeader from "./LayoutHeader";
import Background from "./Background";
import SideBar from "./SideBar";
import { LAYOUT_FADE_DURATION } from "../constant";
import { useCallback, useContext, useEffect, useState } from "react";
import { CommonContext } from "@/context/common";
import FullScreenNav from "./FullScreenNav";
import { activateBodyScroll, deActivateBodyScroll } from "../utils/dom";
import LayoutMain from "./LayoutMain";
import { CursorContext } from "@/context/cursor";
import ProjectDetail from "@/components/projects/ProjectDetail";
import Memorizing from "./Memorizing";

export default function Layout({ children }: { children: React.ReactNode }) {
  const { layoutRef, project } = useContext(CommonContext);
  const { isScreenBelowLg } = useContext(CursorContext);
  const [navOpen, setNavOpen] = useState(false);

  const openNav = useCallback(() => {
    setNavOpen(true);
    deActivateBodyScroll();
  }, []);

  const closeNav = useCallback(() => {
    setNavOpen(false);
    activateBodyScroll();
  }, []);

  useEffect(() => {
    activateBodyScroll();
  }, []);

  return (
    <>
      <Head>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Background />
      <div
        ref={layoutRef}
        style={{
          transitionDuration: `${LAYOUT_FADE_DURATION}ms`,
        }}
        className={clsx(
          "px-4 text-zinc-800 transition-opacity max-w-[1920px] min-h-screen opacity-100",
          "sm:px-10 lg:px-28 xl:px-32 2xl:px-60",
          "dark:text-zinc-400"
        )}
      >
        <Memorizing>
          <LayoutHeader openNav={openNav} />
          <LayoutMain>{children}</LayoutMain>
          <LayoutFooter />
        </Memorizing>
        {isScreenBelowLg ? <FullScreenNav navOpen={navOpen} closeNav={closeNav} /> : <SideBar />}
        {project && <ProjectDetail project={project} />}
      </div>
      <Cursor />
    </>
  );
}
